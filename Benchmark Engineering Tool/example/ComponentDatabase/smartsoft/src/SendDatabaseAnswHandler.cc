//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "SendDatabaseAnswHandler.hh"
#include "ComponentDatabase.hh"

SendDatabaseAnswHandler::SendDatabaseAnswHandler(
		Smart::IQueryServerPattern<CommHoleLocalizerBenchmark::Query,
				CommHoleLocalizerBenchmark::QueryResult, SmartACE::QueryId>* server) :
		SendDatabaseAnswHandlerCore(server) {

}

SendDatabaseAnswHandler::~SendDatabaseAnswHandler() {

}

void SendDatabaseAnswHandler::handleQuery(const SmartACE::QueryId &id,
		const CommHoleLocalizerBenchmark::Query& request) {

	int scenario = request.getValue();
	std::cout << "received scenario is " << scenario << std::endl;
	CommHoleLocalizerBenchmark::QueryResult answer;
	CommHoleLocalizer::ImageDir firstImage;
	CommHoleLocalizer::ImageDir secondImage;
	CommHoleLocalizer::ImageDir thirdImage;
	CommHoleLocalizer::ImageDir fourthImage;
	CommHoleLocalizer::ImageDir fifthImage;
	CommHoleLocalizer::ImageDir sixthImage;
	CommHoleLocalizer::ImageDir seventhImage;
	switch (scenario) {
	case 0:
		firstImage.setDirectory("/home/smartsoft/Desktop/Database/i1.jpeg");
		secondImage.setDirectory(
				"/home/smartsoft/Desktop/Database/i2.jpeg");
		thirdImage.setDirectory("/home/smartsoft/Desktop/Database/i3.jpeg");
		fourthImage.setDirectory("/home/smartsoft/Desktop/Database/i4.jpeg");
		fifthImage.setDirectory("/home/smartsoft/Desktop/Database/i5.jpeg");
		sixthImage.setDirectory("/home/smartsoft/Desktop/Database/i6.jpeg");
		seventhImage.setDirectory("/home/smartsoft/Desktop/Database/i7.jpeg");

		answer.resizeDirectoriesList(7);
		answer.resizeGtd(7);

		answer.setDirectoriesListElemAtPos(0, firstImage);
		answer.setDirectoriesListElemAtPos(1, secondImage);
		answer.setDirectoriesListElemAtPos(2, thirdImage);
		answer.setDirectoriesListElemAtPos(3, fourthImage);
		answer.setDirectoriesListElemAtPos(4, fifthImage);
		answer.setDirectoriesListElemAtPos(5, sixthImage);
		answer.setDirectoriesListElemAtPos(6, seventhImage);

		answer.setGtdElemAtPos(0, 4);
		answer.setGtdElemAtPos(1, 4);
		answer.setGtdElemAtPos(2, 2);
		answer.setGtdElemAtPos(3, 6);
		answer.setGtdElemAtPos(4, 2);
		answer.setGtdElemAtPos(5, 2);
		answer.setGtdElemAtPos(6, 1);
		break;

	case 1:
		firstImage.setDirectory("/home/smartsoft/Desktop/Database/i8.jpeg");
		secondImage.setDirectory("/home/smartsoft/Desktop/Database/i9.jpeg");
//		thirdImage.setDirectory("/home/smartsoft/Desktop/Database/I10.jpg");

		answer.resizeDirectoriesList(2);
		answer.resizeGtd(2);

		answer.setDirectoriesListElemAtPos(0, firstImage);
		answer.setDirectoriesListElemAtPos(1, secondImage);
//		answer.setDirectoriesListElemAtPos(2, thirdImage);

		answer.setGtdElemAtPos(0, 1);
		answer.setGtdElemAtPos(1, 2);
//		answer.setGtdElemAtPos(2, 6);
		break;

	case 2:
		firstImage.setDirectory("/home/smartsoft/Desktop/Database/i8.jpeg");
		secondImage.setDirectory("/home/smartsoft/Desktop/Database/i9.jpeg");
		//		thirdImage.setDirectory("/home/smartsoft/Desktop/Database/I10.jpg");

		answer.resizeDirectoriesList(2);
		answer.resizeGtd(2);

		answer.setDirectoriesListElemAtPos(0, firstImage);
		answer.setDirectoriesListElemAtPos(1, secondImage);
		//		answer.setDirectoriesListElemAtPos(2, thirdImage);

		answer.setGtdElemAtPos(0, 1);
		answer.setGtdElemAtPos(1, 2);
		//		answer.setGtdElemAtPos(2, 6);
		break;

	}
	std::cout << answer.getDirectoriesListElemAtPos(1).getDirectory()
			<< std::endl;

	// implement your query handling logic here and fill in the answer object

	this->server->answer(id, answer);
}
