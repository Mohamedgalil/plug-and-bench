//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommHoleLocalizerBenchmark/QueryResultACE.hh"
#include <ace/SString.h>
#include "CommHoleLocalizer/ImageDirACE.hh"

// serialization operator for element QueryResult
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommHoleLocalizerBenchmarkIDL::QueryResult &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element directoriesList
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.directoriesList.size());
	std::vector<CommHoleLocalizerIDL::ImageDir>::const_iterator data_directoriesListIt;
	for(data_directoriesListIt=data.directoriesList.begin(); data_directoriesListIt!=data.directoriesList.end(); data_directoriesListIt++) {
		good_bit = good_bit && cdr << *data_directoriesListIt;
	}
	// serialize list-element gtd
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.gtd.size());
	good_bit = good_bit && cdr.write_short_array(data.gtd.data(), data.gtd.size());
	
	return good_bit;
}

// de-serialization operator for element QueryResult
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommHoleLocalizerBenchmarkIDL::QueryResult &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize list-type element directoriesList
	ACE_CDR::ULong data_directoriesListNbr;
	good_bit = good_bit && cdr >> data_directoriesListNbr;
	data.directoriesList.clear();
	CommHoleLocalizerIDL::ImageDir data_directoriesListItem;
	for(ACE_CDR::ULong i=0; i<data_directoriesListNbr; ++i) {
		good_bit = good_bit && cdr >> data_directoriesListItem;
		data.directoriesList.push_back(data_directoriesListItem);
	}
	// deserialize list-type element gtd
	ACE_CDR::ULong data_gtdNbr;
	good_bit = good_bit && cdr >> data_gtdNbr;
	data.gtd.resize(data_gtdNbr);
	good_bit = good_bit && cdr.read_short_array(data.gtd.data(), data_gtdNbr);
	
	return good_bit;
}

// serialization operator for CommunicationObject QueryResult
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommHoleLocalizerBenchmark::QueryResult &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject QueryResult
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommHoleLocalizerBenchmark::QueryResult &obj)
{
	return cdr >> obj.set();
}
